# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    admin.pagination.page_size: 30
    thumbnail.size: 200
    thumbnail.expire: 8640000
    
    assetbuilder:
        assetsDir: assets
        publicDir: assets
        files:
            front.css:
                - vendor/bootstrap-4.3.1/css/bootstrap.min.css
                - vendor/flag-icon-css-3.3.0/css/flag-icon.min.css
                - vendor/Font-Awesome-5.8.1/css/all.min.css
                - css/front.css
            front.js:
                - vendor/jquery-3.4.0/dist/jquery.min.js
                - vendor/bootstrap-4.3.1/js/bootstrap.min.js
                - js/front.js
            admin.css:
                - vendor/bootstrap-4.3.1/css/bootstrap.min.css
                - vendor/flag-icon-css-3.3.0/css/flag-icon.min.css
                - vendor/Font-Awesome-5.8.1/css/all.min.css
                - vendor/select2-4.0.5/dist/css/select2.min.css
                - vendor/select2-bootstrap-theme-0.1.0-beta.10/dist/select2-bootstrap.min.css
                - css/admin.css
            admin.js:
                - vendor/jquery-3.4.0/dist/jquery.min.js
                - vendor/bootstrap-4.3.1/js/bootstrap.min.js
                - vendor/bootbox-5.1.2/bootbox.all.min.js
                - vendor/popper-core-1.15.0/dist/umd/popper.min.js
                - vendor/select2-4.0.5/dist/js/select2.full.min.js
                - ../public/bundles/tetranzselect2entity/js/select2entity.js
                - js/admin.js

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Form\VichNamers:
        public: true

    App\EventListener\EntityListener:
        tags:
            - { name: doctrine.event_listener, event: onFlush }
            - { name: doctrine.event_listener, event: postFlush }

    App\EventListener\AssetBuilderListener:
        tags:
            - { name: kernel.cache_warmer, priority: 0 }
            - { name: kernel.event_listener, event: kernel.controller }
